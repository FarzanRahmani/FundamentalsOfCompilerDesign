# Generated from E:/uni/7th term/fundamentals of compiler design/HWs/HW3/chaloosOotagh.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,27,196,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,1,0,1,0,1,1,1,1,1,2,1,2,1,
        2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,
        5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,
        10,1,10,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,14,1,
        14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,3,18,121,8,18,1,18,4,18,124,
        8,18,11,18,12,18,125,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,
        3,19,137,8,19,1,20,1,20,1,20,5,20,142,8,20,10,20,12,20,145,9,20,
        1,21,1,21,1,22,1,22,1,23,1,23,1,23,1,23,3,23,155,8,23,1,24,4,24,
        158,8,24,11,24,12,24,159,1,24,1,24,1,25,1,25,1,25,3,25,167,8,25,
        1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,3,26,178,8,26,1,27,
        1,27,1,27,1,27,3,27,184,8,27,1,28,1,28,1,29,1,29,5,29,190,8,29,10,
        29,12,29,193,9,29,1,29,1,29,0,0,30,1,1,3,2,5,3,7,4,9,5,11,6,13,7,
        15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,
        37,19,39,20,41,21,43,0,45,0,47,0,49,22,51,23,53,24,55,25,57,26,59,
        27,1,0,6,1,0,48,57,2,0,65,90,97,122,3,0,9,9,13,13,32,32,2,0,60,60,
        62,62,3,0,42,43,45,45,47,47,2,0,10,10,13,13,206,0,1,1,0,0,0,0,3,
        1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,
        0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,
        0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,
        0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,49,1,
        0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,
        0,0,0,1,61,1,0,0,0,3,63,1,0,0,0,5,65,1,0,0,0,7,69,1,0,0,0,9,77,1,
        0,0,0,11,83,1,0,0,0,13,87,1,0,0,0,15,93,1,0,0,0,17,95,1,0,0,0,19,
        97,1,0,0,0,21,99,1,0,0,0,23,101,1,0,0,0,25,104,1,0,0,0,27,109,1,
        0,0,0,29,111,1,0,0,0,31,113,1,0,0,0,33,115,1,0,0,0,35,117,1,0,0,
        0,37,120,1,0,0,0,39,136,1,0,0,0,41,138,1,0,0,0,43,146,1,0,0,0,45,
        148,1,0,0,0,47,154,1,0,0,0,49,157,1,0,0,0,51,166,1,0,0,0,53,177,
        1,0,0,0,55,183,1,0,0,0,57,185,1,0,0,0,59,187,1,0,0,0,61,62,5,61,
        0,0,62,2,1,0,0,0,63,64,5,59,0,0,64,4,1,0,0,0,65,66,5,105,0,0,66,
        67,5,110,0,0,67,68,5,116,0,0,68,6,1,0,0,0,69,70,5,98,0,0,70,71,5,
        111,0,0,71,72,5,111,0,0,72,73,5,108,0,0,73,74,5,101,0,0,74,75,5,
        97,0,0,75,76,5,110,0,0,76,8,1,0,0,0,77,78,5,98,0,0,78,79,5,101,0,
        0,79,80,5,103,0,0,80,81,5,105,0,0,81,82,5,110,0,0,82,10,1,0,0,0,
        83,84,5,101,0,0,84,85,5,110,0,0,85,86,5,100,0,0,86,12,1,0,0,0,87,
        88,5,119,0,0,88,89,5,104,0,0,89,90,5,105,0,0,90,91,5,108,0,0,91,
        92,5,101,0,0,92,14,1,0,0,0,93,94,5,40,0,0,94,16,1,0,0,0,95,96,5,
        41,0,0,96,18,1,0,0,0,97,98,5,123,0,0,98,20,1,0,0,0,99,100,5,125,
        0,0,100,22,1,0,0,0,101,102,5,105,0,0,102,103,5,102,0,0,103,24,1,
        0,0,0,104,105,5,101,0,0,105,106,5,108,0,0,106,107,5,115,0,0,107,
        108,5,101,0,0,108,26,1,0,0,0,109,110,5,33,0,0,110,28,1,0,0,0,111,
        112,5,43,0,0,112,30,1,0,0,0,113,114,5,45,0,0,114,32,1,0,0,0,115,
        116,5,42,0,0,116,34,1,0,0,0,117,118,5,47,0,0,118,36,1,0,0,0,119,
        121,5,45,0,0,120,119,1,0,0,0,120,121,1,0,0,0,121,123,1,0,0,0,122,
        124,3,43,21,0,123,122,1,0,0,0,124,125,1,0,0,0,125,123,1,0,0,0,125,
        126,1,0,0,0,126,38,1,0,0,0,127,128,5,116,0,0,128,129,5,114,0,0,129,
        130,5,117,0,0,130,137,5,101,0,0,131,132,5,102,0,0,132,133,5,97,0,
        0,133,134,5,108,0,0,134,135,5,115,0,0,135,137,5,101,0,0,136,127,
        1,0,0,0,136,131,1,0,0,0,137,40,1,0,0,0,138,143,3,45,22,0,139,142,
        3,45,22,0,140,142,3,43,21,0,141,139,1,0,0,0,141,140,1,0,0,0,142,
        145,1,0,0,0,143,141,1,0,0,0,143,144,1,0,0,0,144,42,1,0,0,0,145,143,
        1,0,0,0,146,147,7,0,0,0,147,44,1,0,0,0,148,149,7,1,0,0,149,46,1,
        0,0,0,150,151,5,92,0,0,151,155,5,34,0,0,152,153,5,92,0,0,153,155,
        5,92,0,0,154,150,1,0,0,0,154,152,1,0,0,0,155,48,1,0,0,0,156,158,
        7,2,0,0,157,156,1,0,0,0,158,159,1,0,0,0,159,157,1,0,0,0,159,160,
        1,0,0,0,160,161,1,0,0,0,161,162,6,24,0,0,162,50,1,0,0,0,163,167,
        5,10,0,0,164,165,5,13,0,0,165,167,5,10,0,0,166,163,1,0,0,0,166,164,
        1,0,0,0,167,52,1,0,0,0,168,178,7,3,0,0,169,170,5,61,0,0,170,178,
        5,61,0,0,171,172,5,33,0,0,172,178,5,61,0,0,173,174,5,60,0,0,174,
        178,5,61,0,0,175,176,5,62,0,0,176,178,5,61,0,0,177,168,1,0,0,0,177,
        169,1,0,0,0,177,171,1,0,0,0,177,173,1,0,0,0,177,175,1,0,0,0,178,
        54,1,0,0,0,179,180,5,124,0,0,180,184,5,124,0,0,181,182,5,38,0,0,
        182,184,5,38,0,0,183,179,1,0,0,0,183,181,1,0,0,0,184,56,1,0,0,0,
        185,186,7,4,0,0,186,58,1,0,0,0,187,191,5,35,0,0,188,190,8,5,0,0,
        189,188,1,0,0,0,190,193,1,0,0,0,191,189,1,0,0,0,191,192,1,0,0,0,
        192,194,1,0,0,0,193,191,1,0,0,0,194,195,6,29,1,0,195,60,1,0,0,0,
        12,0,120,125,136,141,143,154,159,166,177,183,191,2,6,0,0,0,1,0
    ]

class chaloosOotaghLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    INT = 19
    BOOLEAN = 20
    ID = 21
    WS = 22
    NEWLINE = 23
    RELOP = 24
    LOGICOP = 25
    ArithOp = 26
    LINE_COMMENT = 27

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'='", "';'", "'int'", "'boolean'", "'begin'", "'end'", "'while'", 
            "'('", "')'", "'{'", "'}'", "'if'", "'else'", "'!'", "'+'", 
            "'-'", "'*'", "'/'" ]

    symbolicNames = [ "<INVALID>",
            "INT", "BOOLEAN", "ID", "WS", "NEWLINE", "RELOP", "LOGICOP", 
            "ArithOp", "LINE_COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "INT", "BOOLEAN", 
                  "ID", "DIGIT", "LETTER", "ESC", "WS", "NEWLINE", "RELOP", 
                  "LOGICOP", "ArithOp", "LINE_COMMENT" ]

    grammarFileName = "chaloosOotagh.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


